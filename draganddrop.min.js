/****************************************
 * 
 * Copyright (c) 2020 Amur Khoyetsyan
 * 
 * The MIT License (MIT)
 * 
 *****************************************/

!function(){let e={name:"Drag And Drop",elem:{file:[],drag:[],draggable:[]},file:null,data:{name:"Drag And Drop",files:[]}},t={element:null,input:null,start:void 0,end:void 0};const l=t=>{null!==e.elem.drag&&e.elem.drag.forEach(e=>{e.elem===t.target&&!e.elem.classList.contains("dragover")&&e.elem.classList.add("dragover")})},n=t=>{null!==e.elem.drag&&e.elem.drag.forEach(e=>{e.elem.classList.contains("dragover")&&e.elem.classList.remove("dragover")})},d=e=>{e.preventDefault(),l(e)},r=e=>{e.preventDefault(),n()},a=e=>{e.preventDefault(),l(e)};function i(e){for(var t,l=t=(e=[].slice.call(Array.isArray(e)?e:arguments)).length,n=!0;l--&&n;)n=e[l]instanceof File;if(!n)throw new TypeError("expected argument to FileList is File or array of File objects");for(l=new ClipboardEvent("").clipboardData||new DataTransfer;t--;)l.items.add(e[t]);return l.files}const o=(t,l,d)=>{let r=((t,l)=>{let n=0;if("drop"===l){n=e.elem.drag.length;for(let l=0;l<n;l++)if(e.elem.drag[l].elem===t)return{index:l,type:"drop"}}else{n=e.elem.file.length;for(let l=0;l<n;l++)if(e.elem.file[l].elem===t)return{index:l,type:"file"}}return{index:-1,type:""}})(l,d);-1!==r.index&&("drop"===r.type?void 0!==e.elem.drag[r.index].start&&e.elem.drag[r.index].start():void 0!==e.elem.file[r.index].start&&e.elem.file[r.index].start()),e.file=[],e.data.files=[],n(),e.file="drop"===d?t.dataTransfer.files:t.target.files;let a=m(l);void 0!==e.file&&s(e.file,d,(e=>{let t={};return t.id=e.hasAttribute("id")?e.getAttribute("id"):null,t.name=e.hasAttribute("name")?e.getAttribute("name"):null,t.classes=e.hasAttribute("class")?e.getAttribute("class"):null,t.tagName=e.nodeName,t.node=e,t})(l),a).then(t=>{-1!==r.index&&("drop"===r.type?(null!==e.elem.drag[r.index].input&&(e.elem.drag[r.index].input.files=new i(a?[...e.file]:e.file[0])),void 0!==e.elem.drag[r.index].end&&e.elem.drag[r.index].end(t,null)):(null!==e.elem.file[r.index].input&&(e.elem.file[r.index].input.files=new i(a?[...e.file]:e.file[0])),void 0!==e.elem.file[r.index].end&&e.elem.file[r.index].end(t,null)))}).catch(t=>{-1!==r.index&&("drop"===r.type?void 0!==e.elem.drag[r.index].end&&e.elem.drag[r.index].end(null,t):void 0!==e.elem.file[r.index].end&&e.elem.file[r.index].end(null,t))})},s=(t,l,n,d,r=0)=>{let a=new FileReader;a.readAsDataURL(t[r]);let i=(webkitURL||URL).createObjectURL(t[r]);return new Promise((o,u)=>{a.onloadend=(u=>{e.data.files.push({file:t[r],blob:i,data:a.result,filename:t[r].name,type:l,inputName:n,total:u.total,loaded:u.loaded}),d?(r++,t.length>r?o(s(e.file,l,n,d,r)):o(e.data)):o(e.data)}),a.onerror=(e=>{u(new Error("Failed to load ",e))})})},u=e=>void 0!==e.length&&void 0!==e.item,m=e=>{let t=!1;return e.hasAttribute("multiple")&&e.getAttribute("multiple").length>0&&(t=(e=>"true"===e)(e.getAttribute("multiple"))),t},f=e=>{e.addEventListener("dragenter",d,!1),e.addEventListener("dragleave",r,!1),e.addEventListener("dragover",a,!1),e.addEventListener("drop",t=>{t.preventDefault(),o(t,e,"drop")},!1)};e.dragedUpload=((l=t)=>{let n=l.element;if(null!==n&&u(n))for(element of n)e.elem.drag.push({elem:element,input:l.input?l.input:null,start:l.start?l.start:void 0,end:l.end?l.end:void 0}),f(element);else null!==n?(e.elem.drag.push({elem:n,input:l.input?l.input:null,start:l.start?l.start:void 0,end:l.end?l.end:void 0}),f(n)):l.end(null,new Error("Element of undefined"))}),e.fileChange=((l=t)=>{let n=l.element;if(null!==n&&u(n))for(element of n)e.elem.file.push({elem:element,input:l.input?l.input:null,start:l.start?l.start:void 0,end:l.end?l.end:void 0}),element.addEventListener("change",e=>{e.preventDefault(),o(e,element,"change")},!1);else null!==n?(e.elem.file.push({elem:n,input:l.input?l.input:null,start:l.start?l.start:void 0,end:l.end?l.end:void 0}),n.addEventListener("change",e=>{e.preventDefault(),o(e,n,"change")},!1)):l.end(null,new Error("Element of undefined"))});const p=t=>{e.elem.draggable.forEach(e=>{if(t.target===e.node){let l=0,n=0;l=e.cords.startX-t.pageX,n=e.cords.startY-t.pageY,e.cords.endX+=-l,e.cords.endY+=-n,e.cords.startX=t.pageX,e.cords.startY=t.pageY,e.node.style.zIndex="100",e.node.style.top=`${e.cords.endY}px`,e.node.style.left=`${e.cords.endX}px`}else e.node.style.zIndex="99"})},g=t=>{t.style.position="fixed",t.style.zIndex="99",t.style.cursor="move",e.elem.draggable.push({node:t,cords:{startX:0,startY:0,endX:0,endY:0}})};e.dragableContex=(t=>{if(null!==t&&u(t))for(item of t)g(item);else null!==t&&g(t);null!==t&&e.elem.draggable.forEach(e=>{e.node.addEventListener("mousedown",t=>{let{x:l,y:n}=e.node.getBoundingClientRect();e.cords.startX=t.pageX,e.cords.startY=t.pageY,e.cords.endX=l,e.cords.endY=n,e.node.addEventListener("mousemove",p,!1)}),e.node.addEventListener("mouseup",t=>{e.node.removeEventListener("mousemove",p,!1)},!1)})}),window.DAD=e}();